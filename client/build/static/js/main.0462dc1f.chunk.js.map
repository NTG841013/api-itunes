{"version":3,"sources":["components/navBar.js","components/home.js","loader.gif","components/PageNavigation.js","components/Favorite.js","components/music.js","components/videos.js","components/movies.js","components/audiobooks.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Navbar","expand","bg","variant","Brand","href","aria-hidden","Collapse","Text","Nav","to","Home","src","alt","width","height","props","loading","showPrevLink","showNextLink","handlePrevClick","handleNextClick","onClick","favoriteList","Table","bordered","dark","class","map","item","key","id","link","img","title","Music","getPageCount","total","denominator","valueToBeAdded","Math","floor","componentWillMount","updatedPageNo","query","pageNumber","searchUrl","cancel","axios","CancelToken","source","get","cancelToken","token","then","res","data","resultCount","totalPagesCount","resultNotFound","results","length","setState","Results","message","totalResult","totalPages","currentPageNo","catch","error","isCancel","handleOnInputChange","event","target","value","handlePageClick","type","e","preventDefault","state","addToFavorite","index","previewUrl","artistName","artworkUrl100","console","log","renderSearchResults","Object","keys","result","Button","color","size","bind","this","Favorite","htmlFor","name","placeholder","onChange","loader","PageNavigation","React","Component","Videos","trackViewUrl","Movies","trackName","s","AudioBooks","collectionViewUrl","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0462dc1f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n\nfunction NavBar() {\n  return (\n    <header className=\"App-header\">\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\n        {/*---Logo icon image --- */}\n        <Navbar.Brand href=\"/\">\n          <div className=\"wrap-Brand\">\n            <i className=\"fa fa-music\" aria-hidden=\"true\" />\n            <h2 className=\"logoName\"> iTunes Search API</h2>\n          </div>\n        </Navbar.Brand>\n\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text className=\"nav-text\">\n            <Nav className=\"mr-auto\">\n              <Link to=\"/music\" className=\"link\">\n                Music\n              </Link>\n              <Link to=\"/videos\" className=\"link\">\n                Videos\n              </Link>\n              <Link to=\"/movies\" className=\"link\">\n                Movies\n              </Link>\n              <Link to=\"/audiobooks\" className=\"link\">\n                Audio Books\n              </Link>\n            </Nav>\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n      <div className=\"welcome-text\">\n        <h1>Welcome To iTunes</h1>\n      </div>\n    </header>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"../App.css\";\n\nfunction Home() {\n  return (\n    <div className=\"home-container\">\n      <h3>GET</h3>\n      <div className=\"home-wrap\">\n        <h1>MUSIC</h1>\n        <img\n          src=\"./music1.png\"\n          alt=\"music\"\n          width=\"50%\"\n          height=\"280\"\n          className=\"img\"\n        />\n      </div>\n      <br />\n      <div className=\"home-wrap\">\n        <h1>VIDEOS</h1>\n        <img\n          src=\"./videos3.jpg\"\n          alt=\"video\"\n          width=\"50%\"\n          height=\"310\"\n          className=\"img\"\n        />\n      </div>\n      <br />\n      <div className=\"home-wrap\">\n        <h1>MOVIES</h1>\n        <img\n          src=\"./movies4.png\"\n          alt=\"movie\"\n          width=\"50%\"\n          height=\"310\"\n          className=\"img\"\n        />\n      </div>\n      <br />\n      <div className=\"home-wrap\">\n        <h1>AUDIO BOOKS</h1>\n        <img\n          src=\"./book5.jpg\"\n          alt=\"audio\"\n          width=\"50%\"\n          height=\"310\"\n          className=\"img\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/loader.488387b4.gif\";","import React from \"react\";\n\n// eslint-disable-next-line\nexport default props => {\n  const {\n    loading,\n    showPrevLink,\n    showNextLink,\n    handlePrevClick,\n    handleNextClick\n  } = props;\n  return (\n    <div className=\"nav-link-container\">\n      {/* anchor tag for previous page*/}\n      <a\n        href=\"/\"\n        className={`nav-link ${showPrevLink ? \"show\" : \"hide\"} \n          ${loading ? \"greyed-out\" : \"\"}`}\n        onClick={handlePrevClick}\n      >\n        Prev\n      </a>\n      {/* anchor tag for next page*/}\n      <a\n        href=\"/\"\n        className={`nav-link ${showNextLink ? \"show\" : \"hide\"}\n          ${loading ? \"greyed-out\" : \"\"}`}\n        onClick={handleNextClick}\n      >\n        Next\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n\n// eslint-disable-next-line\nexport default props => {\n  const { favoriteList } = props;\n\n  return (\n    <div className=\"favorite\">\n      <Table bordered dark>\n        <thead>\n          <tr>\n            <th>#Favorite List</th>\n            <th>\n              <i class=\"fa fa-music\" aria-hidden=\"true\" />\n            </th>\n          </tr>\n        </thead>\n      </Table>\n      <Table bordered>\n        <tbody>\n          <tr className=\"row-container\">\n            {favoriteList.map(item => {\n              return (\n                <div>\n                  <a key={item.id} href={item.link}>\n                    <td className=\"favorite-wraper\">\n                      <img\n                        className=\"favourite-image\"\n                        src={item.img}\n                        alt={item.title}\n                      />\n                    </td>\n                    <td className=\"favorite-username\">{item.title}</td>\n                  </a>\n                </div>\n              );\n            })}\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../search.css\";\nimport loader from \"../loader.gif\";\nimport PageNavigation from \"./PageNavigation\";\nimport Favorite from \"./Favorite\";\nimport { Button } from \"reactstrap\";\n\nclass Music extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: \"\",\n      Results: {},\n      loading: false,\n      message: \"\",\n      totalResult: 0,\n      totalPages: 0,\n      currentPageNo: 0,\n      favoriteList: []\n    };\n    this.cancel = \"\";\n  }\n\n  getPageCount = (total, denominator) => {\n    const divisible = 0 === total % denominator;\n    const valueToBeAdded = divisible ? 0 : 1;\n    return Math.floor(total / denominator) + valueToBeAdded;\n  };\n\n  componentWillMount = (updatedPageNo = \"\", query) => {\n    // to get page number automatically\n    let pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n    const searchUrl = `/music/${query}/${pageNumber}`;\n\n    // to cancel results if user back space and types in new request\n    if (this.cancel) {\n      this.cancel.cancel();\n    }\n    this.cancel = axios.CancelToken.source();\n\n    axios\n      .get(searchUrl, {\n        cancelToken: this.cancel.token\n      })\n      .then(res => {\n        //   get response of total results\n        const total = res.data.resultCount;\n        const totalPagesCount = this.getPageCount(total, 20);\n        const resultNotFound = !res.data.results.length\n          ? \"There are no more search results. Please try a new search\"\n          : \"\";\n        //   set state\n        this.setState({\n          Results: res.data.results,\n          message: resultNotFound,\n          totalResult: total,\n          totalPages: totalPagesCount,\n          currentPageNo: updatedPageNo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: \"Failed to fetch the data\"\n          });\n        }\n      });\n  };\n\n  handleOnInputChange = event => {\n    const query = event.target.value;\n    //if nothing on query set state to empty\n    if (!query) {\n      this.setState({\n        query,\n        Results: {},\n        message: \"\",\n        totalPages: 0,\n        totalResult: 0\n      });\n    } else {\n      this.setState({ query: query, loading: true, message: \"\" }, () => {\n        this.componentWillMount(1, query);\n      });\n    }\n  };\n\n  handlePageClick = (type, e) => {\n    e.preventDefault();\n    const updatedPageNo =\n      \"Prev\" === type\n        ? this.state.currentPageNo - 1\n        : this.state.currentPageNo + 1;\n\n    // check our page current state\n    if (!this.state.loading) {\n      this.setState({ loading: true, message: \"\" }, () => {\n        this.componentWillMount(updatedPageNo, this.state.query);\n      });\n    }\n  };\n\n  //addToFavorite\n  addToFavorite = (index, previewUrl, artistName, artworkUrl100) => {\n    const { favoriteList } = this.state;\n\n    let item = {\n      id: index,\n      link: previewUrl,\n      title: artistName,\n      img: artworkUrl100\n    };\n\n    this.setState({ favoriteList: [...favoriteList, item] });\n\n    console.log(favoriteList);\n  };\n\n  renderSearchResults = () => {\n    const { Results } = this.state;\n    // set state for search results\n    if (Object.keys(Results).length && Results.length) {\n      return (\n        <div className=\"results-container\">\n          {Results.map((result, index) => {\n            return (\n              <div className=\"result-item\">\n                <a key={index} href={result.previewUrl}>\n                  <h6 className=\"image-username\">{result.artistName}</h6>\n                  <div className=\"image-wraper\">\n                    <img\n                      className=\"image\"\n                      src={result.artworkUrl100}\n                      alt={result.artistName}\n                    />\n                  </div>\n                </a>\n                <div>\n                  <Button\n                    color=\"outline-success\"\n                    size=\"sm\"\n                    onClick={this.addToFavorite.bind(\n                      this,\n                      index,\n                      result.previewUrl,\n                      result.artistName,\n                      result.artworkUrl100\n                    )}\n                  >\n                    addToFavorite\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const {\n      query,\n      loading,\n      message,\n      currentPageNo,\n      totalPages,\n      favoriteList\n    } = this.state;\n    // next and previous page handle\n    const showPrevLink = 1 < currentPageNo;\n    const showNextLink = totalPages > currentPageNo;\n    console.log(favoriteList);\n\n    return (\n      <div className=\"container\">\n        {/* favorite pass props */}\n        <Favorite favoriteList={favoriteList} />\n\n        {/* Heading*/}\n        <h2 className=\"heading\">Search For Music Below</h2>\n        <label className=\"search-label\" htmlFor=\"search-input\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            id=\"search-input\"\n            placeholder=\"Search...\"\n            onChange={this.handleOnInputChange}\n          />\n          <i className=\"fa fa-search search-icon\" aria-hidden=\"true\" />\n        </label>\n\n        {/* Message */}\n        {message && <p className=\"message\"> {message}</p>}\n\n        {/*loader */}\n        <img\n          src={loader}\n          className={`search-loading ${loading ? \"show\" : \"hide\"}`}\n          alt=\"loader\"\n        />\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n\n        {/* Results */}\n        {this.renderSearchResults()}\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Music;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../search.css\";\nimport loader from \"../loader.gif\";\nimport PageNavigation from \"./PageNavigation\";\nimport Favorite from \"./Favorite\";\nimport { Button } from \"reactstrap\";\n\nclass Videos extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: \"\",\n      Results: {},\n      loading: false,\n      message: \"\",\n      totalResult: 0,\n      totalPages: 0,\n      currentPageNo: 0,\n      favoriteList: []\n    };\n    this.cancel = \"\";\n  }\n\n  getPageCount = (total, denominator) => {\n    const divisible = 0 === total % denominator;\n    const valueToBeAdded = divisible ? 0 : 1;\n    return Math.floor(total / denominator) + valueToBeAdded;\n  };\n\n  componentWillMount = (updatedPageNo = \"\", query) => {\n    // to get page number automatically\n    let pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n    const searchUrl = `/videos/${query}/${pageNumber}`;\n\n    // to cancel results if user back space and types in new request\n    if (this.cancel) {\n      this.cancel.cancel();\n    }\n    this.cancel = axios.CancelToken.source();\n\n    axios\n      .get(searchUrl, {\n        cancelToken: this.cancel.token\n      })\n      .then(res => {\n        //   get response of total results\n        const total = res.data.resultCount;\n        const totalPagesCount = this.getPageCount(total, 20);\n        const resultNotFound = !res.data.results.length\n          ? \"There are no more search results. Please try a new search\"\n          : \"\";\n        //   set state\n        this.setState({\n          Results: res.data.results,\n          message: resultNotFound,\n          totalResult: total,\n          totalPages: totalPagesCount,\n          currentPageNo: updatedPageNo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: \"Failed to fetch the data\"\n          });\n        }\n      });\n  };\n\n  handleOnInputChange = event => {\n    const query = event.target.value;\n    //if nothing on query set state to empty\n    if (!query) {\n      this.setState({\n        query,\n        Results: {},\n        message: \"\",\n        totalPages: 0,\n        totalResult: 0\n      });\n    } else {\n      this.setState({ query: query, loading: true, message: \"\" }, () => {\n        this.componentWillMount(1, query);\n      });\n    }\n  };\n\n  handlePageClick = (type, e) => {\n    e.preventDefault();\n    const updatedPageNo =\n      \"Prev\" === type\n        ? this.state.currentPageNo - 1\n        : this.state.currentPageNo + 1;\n\n    // check our page current state\n    if (!this.state.loading) {\n      this.setState({ loading: true, message: \"\" }, () => {\n        this.componentWillMount(updatedPageNo, this.state.query);\n      });\n    }\n  };\n\n  //addToFavorite\n  addToFavorite = (index, trackViewUrl, artistName, artworkUrl100) => {\n    const { favoriteList } = this.state;\n\n    let item = {\n      id: index,\n      link: trackViewUrl,\n      title: artistName,\n      img: artworkUrl100\n    };\n\n    this.setState({ favoriteList: [...favoriteList, item] });\n\n    console.log(favoriteList);\n  };\n\n  renderSearchResults = () => {\n    const { Results } = this.state;\n    // set state for search results\n    if (Object.keys(Results).length && Results.length) {\n      return (\n        <div className=\"results-container\">\n          {Results.map((result, index) => {\n            return (\n              <div className=\"result-item\">\n                <a key={index} href={result.trackViewUrl}>\n                  <h6 className=\"image-username\">{result.artistName}</h6>\n                  <div className=\"image-wraper\">\n                    <img\n                      className=\"image\"\n                      src={result.artworkUrl100}\n                      alt={result.artistName}\n                    />\n                  </div>\n                </a>\n                <div>\n                  <Button\n                    color=\"outline-success\"\n                    size=\"sm\"\n                    onClick={this.addToFavorite.bind(\n                      this,\n                      index,\n                      result.trackViewUrl,\n                      result.artistName,\n                      result.artworkUrl100\n                    )}\n                  >\n                    addToFavorite\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const {\n      query,\n      loading,\n      message,\n      currentPageNo,\n      totalPages,\n      favoriteList\n    } = this.state;\n    // next and previous page handle\n    const showPrevLink = 1 < currentPageNo;\n    const showNextLink = totalPages > currentPageNo;\n    console.log(favoriteList);\n\n    return (\n      <div className=\"container\">\n        {/* favorite pass props */}\n        <Favorite favoriteList={favoriteList} />\n\n        {/* Heading*/}\n        <h2 className=\"heading\">Search For Videos Below</h2>\n        <label className=\"search-label\" htmlFor=\"search-input\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            id=\"search-input\"\n            placeholder=\"Search...\"\n            onChange={this.handleOnInputChange}\n          />\n          <i className=\"fa fa-search search-icon\" aria-hidden=\"true\" />\n        </label>\n\n        {/* Message */}\n        {message && <p className=\"message\"> {message}</p>}\n\n        {/*loader */}\n        <img\n          src={loader}\n          className={`search-loading ${loading ? \"show\" : \"hide\"}`}\n          alt=\"loader\"\n        />\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n\n        {/* Results */}\n        {this.renderSearchResults()}\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Videos;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../search.css\";\nimport loader from \"../loader.gif\";\nimport PageNavigation from \"./PageNavigation\";\nimport Favorite from \"./Favorite\";\nimport { Button } from \"reactstrap\";\n\nclass Movies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: \"\",\n      Results: {},\n      loading: false,\n      message: \"\",\n      totalResult: 0,\n      totalPages: 0,\n      currentPageNo: 0,\n      favoriteList: []\n    };\n    this.cancel = \"\";\n  }\n\n  getPageCount = (total, denominator) => {\n    const divisible = 0 === total % denominator;\n    const valueToBeAdded = divisible ? 0 : 1;\n    return Math.floor(total / denominator) + valueToBeAdded;\n  };\n\n  componentWillMount = (updatedPageNo = \"\", query) => {\n    // to get page number automatically\n    let pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n    const searchUrl = `/movies/${query}/${pageNumber}`;\n\n    // to cancel results if user back space and types in new request\n    if (this.cancel) {\n      this.cancel.cancel();\n    }\n    this.cancel = axios.CancelToken.source();\n\n    axios\n      .get(searchUrl, {\n        cancelToken: this.cancel.token\n      })\n      .then(res => {\n        //   get response of total results\n        const total = res.data.resultCount;\n        const totalPagesCount = this.getPageCount(total, 20);\n        const resultNotFound = !res.data.results.length\n          ? \"There are no more search results. Please try a new search\"\n          : \"\";\n        //   set state\n        this.setState({\n          Results: res.data.results,\n          message: resultNotFound,\n          totalResult: total,\n          totalPages: totalPagesCount,\n          currentPageNo: updatedPageNo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: \"Failed to fetch the data\"\n          });\n        }\n      });\n  };\n\n  handleOnInputChange = event => {\n    const query = event.target.value;\n    //if nothing on query set state to empty\n    if (!query) {\n      this.setState({\n        query,\n        Results: {},\n        message: \"\",\n        totalPages: 0,\n        totalResult: 0\n      });\n    } else {\n      this.setState({ query: query, loading: true, message: \"\" }, () => {\n        this.componentWillMount(1, query);\n      });\n    }\n  };\n\n  handlePageClick = (type, e) => {\n    e.preventDefault();\n    const updatedPageNo =\n      \"Prev\" === type\n        ? this.state.currentPageNo - 1\n        : this.state.currentPageNo + 1;\n\n    // check our page current state\n    if (!this.state.loading) {\n      this.setState({ loading: true, message: \"\" }, () => {\n        this.componentWillMount(updatedPageNo, this.state.query);\n      });\n    }\n  };\n\n  //addToFavorite\n  addToFavorite = (index, previewUrl, trackName, artworkUrl100) => {\n    const { favoriteList } = this.state;\n\n    let item = {\n      id: index,\n      link: previewUrl,\n      title: trackName,\n      img: artworkUrl100\n    };\n\n    this.setState({ favoriteList: [...favoriteList, item] });\n\n    console.log(favoriteList);\n  };\n\n  renderSearchResults = () => {\n    const { Results } = this.state;\n    // set state for search results\n    if (Object.keys(Results).length && Results.length) {\n      return (\n        <div className=\"results-container\">\n          {Results.map((result, index) => {\n            return (\n              <div className=\"result-item\">\n                <a key={index} href={result.previewUrl}>\n                  <h6 className=\"image-username\">{result.trackName}</h6>\n                  <div className=\"image-wraper\">\n                    <img\n                      className=\"image\"\n                      src={result.artworkUrl100}\n                      alt={result.trackName}\n                      s\n                    />\n                  </div>\n                </a>\n                <div>\n                  <Button\n                    color=\"outline-success\"\n                    size=\"sm\"\n                    onClick={this.addToFavorite.bind(\n                      this,\n                      index,\n                      result.previewUrl,\n                      result.trackName,\n                      result.artworkUrl100\n                    )}\n                  >\n                    addToFavorite\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const {\n      query,\n      loading,\n      message,\n      currentPageNo,\n      totalPages,\n      favoriteList\n    } = this.state;\n    // next and previous page handle\n    const showPrevLink = 1 < currentPageNo;\n    const showNextLink = totalPages > currentPageNo;\n    console.log(favoriteList);\n\n    return (\n      <div className=\"container\">\n        {/* favorite pass props */}\n        <Favorite favoriteList={favoriteList} />\n\n        {/* Heading*/}\n        <h2 className=\"heading\">Search For Movies Below</h2>\n        <label className=\"search-label\" htmlFor=\"search-input\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            id=\"search-input\"\n            placeholder=\"Search...\"\n            onChange={this.handleOnInputChange}\n          />\n          <i className=\"fa fa-search search-icon\" aria-hidden=\"true\" />\n        </label>\n\n        {/* Message */}\n        {message && <p className=\"message\"> {message}</p>}\n\n        {/*loader */}\n        <img\n          src={loader}\n          className={`search-loading ${loading ? \"show\" : \"hide\"}`}\n          alt=\"loader\"\n        />\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n\n        {/* Results */}\n        {this.renderSearchResults()}\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../search.css\";\nimport loader from \"../loader.gif\";\nimport PageNavigation from \"./PageNavigation\";\nimport Favorite from \"./Favorite\";\nimport { Button } from \"reactstrap\";\n\nclass AudioBooks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: \"\",\n      Results: {},\n      loading: false,\n      message: \"\",\n      totalResult: 0,\n      totalPages: 0,\n      currentPageNo: 0,\n      favoriteList: []\n    };\n    this.cancel = \"\";\n  }\n\n  getPageCount = (total, denominator) => {\n    const divisible = 0 === total % denominator;\n    const valueToBeAdded = divisible ? 0 : 1;\n    return Math.floor(total / denominator) + valueToBeAdded;\n  };\n\n  componentWillMount = (updatedPageNo = \"\", query) => {\n    // to get page number automatically\n    let pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n    const searchUrl = `/audiobooks/${query}/${pageNumber}`;\n\n    // to cancel results if user back space and types in new request\n    if (this.cancel) {\n      this.cancel.cancel();\n    }\n    this.cancel = axios.CancelToken.source();\n\n    axios\n      .get(searchUrl, {\n        cancelToken: this.cancel.token\n      })\n      .then(res => {\n        //   get response of total results\n        const total = res.data.resultCount;\n        const totalPagesCount = this.getPageCount(total, 20);\n        const resultNotFound = !res.data.results.length\n          ? \"There are no more search results. Please try a new search\"\n          : \"\";\n        //   set state\n        this.setState({\n          Results: res.data.results,\n          message: resultNotFound,\n          totalResult: total,\n          totalPages: totalPagesCount,\n          currentPageNo: updatedPageNo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: \"Failed to fetch the data\"\n          });\n        }\n      });\n  };\n\n  handleOnInputChange = event => {\n    const query = event.target.value;\n    //if nothing on query set state to empty\n    if (!query) {\n      this.setState({\n        query,\n        Results: {},\n        message: \"\",\n        totalPages: 0,\n        totalResult: 0\n      });\n    } else {\n      this.setState({ query: query, loading: true, message: \"\" }, () => {\n        this.componentWillMount(1, query);\n      });\n    }\n  };\n\n  handlePageClick = (type, e) => {\n    e.preventDefault();\n    const updatedPageNo =\n      \"Prev\" === type\n        ? this.state.currentPageNo - 1\n        : this.state.currentPageNo + 1;\n\n    // check our page current state\n    if (!this.state.loading) {\n      this.setState({ loading: true, message: \"\" }, () => {\n        this.componentWillMount(updatedPageNo, this.state.query);\n      });\n    }\n  };\n\n  //addToFavorite\n  addToFavorite = (index, collectionViewUrl, artistName, artworkUrl100) => {\n    const { favoriteList } = this.state;\n\n    let item = {\n      id: index,\n      link: collectionViewUrl,\n      title: artistName,\n      img: artworkUrl100\n    };\n\n    this.setState({ favoriteList: [...favoriteList, item] });\n\n    console.log(favoriteList);\n  };\n\n  renderSearchResults = () => {\n    const { Results } = this.state;\n    // set state for search results\n    if (Object.keys(Results).length && Results.length) {\n      return (\n        <div className=\"results-container\">\n          {Results.map((result, index) => {\n            return (\n              <div className=\"result-item\">\n                <a key={index} href={result.collectionViewUrl}>\n                  <h6 className=\"image-username\">{result.artistName}</h6>\n                  <div className=\"image-wraper\">\n                    <img\n                      className=\"image\"\n                      src={result.artworkUrl100}\n                      alt={result.artistName}\n                    />\n                  </div>\n                </a>\n                <div>\n                  <Button\n                    color=\"outline-success\"\n                    size=\"sm\"\n                    onClick={this.addToFavorite.bind(\n                      this,\n                      index,\n                      result.collectionViewUrl,\n                      result.artistName,\n                      result.artworkUrl100\n                    )}\n                  >\n                    addToFavorite\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const {\n      query,\n      loading,\n      message,\n      currentPageNo,\n      totalPages,\n      favoriteList\n    } = this.state;\n    // next and previous page handle\n    const showPrevLink = 1 < currentPageNo;\n    const showNextLink = totalPages > currentPageNo;\n    console.log(favoriteList);\n\n    return (\n      <div className=\"container\">\n        {/* favorite pass props */}\n        <Favorite favoriteList={favoriteList} />\n\n        {/* Heading*/}\n        <h2 className=\"heading\">Search For Audio Books Below</h2>\n        <label className=\"search-label\" htmlFor=\"search-input\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            id=\"search-input\"\n            placeholder=\"Search...\"\n            onChange={this.handleOnInputChange}\n          />\n          <i className=\"fa fa-search search-icon\" aria-hidden=\"true\" />\n        </label>\n\n        {/* Message */}\n        {message && <p className=\"message\"> {message}</p>}\n\n        {/*loader */}\n        <img\n          src={loader}\n          className={`search-loading ${loading ? \"show\" : \"hide\"}`}\n          alt=\"loader\"\n        />\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n\n        {/* Results */}\n        {this.renderSearchResults()}\n\n        {/* Navigation */}\n        <PageNavigation\n          loading={loading}\n          showPrevLink={showPrevLink}\n          showNextLink={showNextLink}\n          handlePrevClick={e => this.handlePageClick(\"prev\", e)}\n          handleNextClick={e => this.handlePageClick(\"next\", e)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AudioBooks;\n","import React from \"react\";\nimport NavBar from \"./components/navBar\";\nimport Home from \"./components/home\";\nimport Music from \"./components/music\";\nimport Videos from \"./components/videos\";\nimport Movies from \"./components/movies\";\nimport AudioBooks from \"./components/audiobooks\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/music\" exact component={Music} />\n          <Route path=\"/videos\" exact component={Videos} />\n          <Route path=\"/movies\" exact component={Movies} />\n          <Route path=\"/audiobooks\" exact component={AudioBooks} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}